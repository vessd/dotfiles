# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Autostart
#
# Notification daemon
exec mako
# Automatically switch the horizontal / vertical window split
exec autotiling-rs
exec nm-applet --indicator
exec "sh -c 'sleep 5 && exec qbittorrent'"
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

### Windows rules
## swaymsg -t get_tree
for_window [class="(?i)mpv"] floating enable
for_window [class="Steam"] floating enable
for_window [class="Paradox Launcher"] floating enable
for_window [app_id="imv"] floating enable
for_window [title="Discord Updater"] floating enable

# Disable tiling grab
tiling_drag disable

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu wofi | xargs swaymsg exec --
set $menu pkill wofi || wofi --exec-search

# Borders
default_border pixel 3
smart_borders on

# Font
# title_align center
font pango:ProductSansMedium 13px

# Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #5e81ac #5e81ac #eceff4 #434c5e   #5e81ac
client.focused_inactive #353b49 #353b49 #d8dee9 #3b4252   #353b49
client.unfocused        #353b49 #353b49 #d8dee9 #3b4252   #353b49
client.urgent           #bf616a #bf616a #eceff4 #900000   #bf616a
client.placeholder      #000000 #0c0c0c #eceff4 #000000   #0c0c0c

#Asignments
assign [app_id="steam"] 4
assign [app_id="virtualbox"] 6
assign [app_id="discord"] 5
assign [title="discord"] 5

# Additionally, you can issue commands with the following syntax.
# This is useful to bind keys to changing the gap size.
gaps inner 5
gaps outer 5
smart_gaps on

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/.local/share/backgrounds/anime-smd-1.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#
# Screen flicker with adaptive sync on, amdgpu bug?
output DP-1 {
    pos 0 0
    res 1920x1080
    adaptive_sync off
    scale 1
}

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
    xkb_layout us,ru
    xkb_options grp:alt_shift_toggle
    xkb_numlock enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+Shift+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload sway
    bindsym --to-code $mod+Shift+r reload

    # Power menu
    bindsym $mod+Shift+e exec wlogout -b 2 -p layer-shell
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    bindsym --to-code $mod+7 workspace number 7
    bindsym --to-code $mod+8 workspace number 8
    bindsym --to-code $mod+9 workspace number 9
    bindsym --to-code $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6
    bindsym --to-code $mod+Shift+7 move container to workspace number 7
    bindsym --to-code $mod+Shift+8 move container to workspace number 8
    bindsym --to-code $mod+Shift+9 move container to workspace number 9
    bindsym --to-code $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym --to-code $mod+s layout stacking
    # bindsym --to-code $mod+w layout tabbed
    # bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
# bindsym --to-code $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
   swaybar_command waybar
}

set $volume_step 5
set $volume_up pactl set-sink-volume @DEFAULT_SINK@ +$volume_step%
set $volume_down pactl set-sink-volume @DEFAULT_SINK@ -$volume_step%
set $volume_mute pactl set-sink-mute @DEFAULT_SINK@ toggle
set $speaker alsa_output.pci-0000_13_00.6.analog-stereo
set $headphone alsa_output.pci-0000_03_00.1.hdmi-stereo-extra3
set $toggle_sink bash -c "if [ "$(pactl get-default-sink)" == $speaker ]; then pactl set-default-sink $headphone; else pactl set-default-sink $speaker; fi"

# Special keys
# /usr/include/xkbcommon/xkbcommon-keysyms.h
bindsym XF86AudioRaiseVolume exec $volume_up
bindsym XF86AudioLowerVolume exec $volume_down
bindsym XF86AudioMute exec pulsemixer $volume_mute

bindsym Print exec grim -g "$(slurp -d)" -t png - | swappy -f -
bindsym Alt+Print exec grim -t png - | swappy -f -

include /etc/sway/config.d/*

# themes
exec_always {
    gsettings set org.gnome.desktop.interface gtk-theme Light-decay
    gsettings set org.gnome.desktop.interface icon-theme Papirus-Light
    gsettings set org.gnome.desktop.interface font-name 'Cantarell 11'
}
